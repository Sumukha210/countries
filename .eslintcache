[{"D:\\countries\\src\\index.js":"1","D:\\countries\\src\\App.js":"2","D:\\countries\\src\\components\\common\\NavBar.jsx":"3","D:\\countries\\src\\components\\pages\\Home\\index.jsx":"4","D:\\countries\\src\\components\\pages\\Map\\index.jsx":"5","D:\\countries\\src\\components\\pages\\Home\\Header\\Header.jsx":"6","D:\\countries\\src\\components\\pages\\Home\\Header\\DropDown.jsx":"7","D:\\countries\\src\\components\\pages\\Home\\Header\\SearchBar.jsx":"8","D:\\countries\\src\\components\\common\\CustomSpinner.jsx":"9","D:\\countries\\src\\Redux\\Reducer\\index.js":"10","D:\\countries\\src\\Redux\\Reducer\\DataReducer.js":"11","D:\\countries\\src\\Redux\\Actions\\DataActions.js":"12","D:\\countries\\src\\components\\pages\\Home\\DisplayCountries\\index.jsx":"13","D:\\countries\\src\\components\\common\\CustomCard.jsx":"14","D:\\countries\\src\\components\\pages\\specificCountry\\index.jsx":"15","D:\\countries\\src\\components\\pages\\specificCountry\\Info.jsx":"16","D:\\countries\\src\\Redux\\Reducer\\ThemeReducer.js":"17","D:\\countries\\src\\Redux\\Actions\\ThemeAction.js":"18","D:\\countries\\src\\Redux\\Reducer\\UniversityReducer.js":"19","D:\\countries\\src\\Redux\\Actions\\UnivertiesAction.js":"20","D:\\countries\\src\\components\\pages\\specificCountry\\UniversityInfo.jsx":"21"},{"size":647,"mtime":1611755904387,"results":"22","hashOfConfig":"23"},{"size":1828,"mtime":1611986462417,"results":"24","hashOfConfig":"23"},{"size":2176,"mtime":1612012803127,"results":"25","hashOfConfig":"23"},{"size":275,"mtime":1611759162405,"results":"26","hashOfConfig":"23"},{"size":1578,"mtime":1611778707118,"results":"27","hashOfConfig":"23"},{"size":520,"mtime":1611753365747,"results":"28","hashOfConfig":"23"},{"size":1152,"mtime":1611990227485,"results":"29","hashOfConfig":"23"},{"size":1439,"mtime":1612010009082,"results":"30","hashOfConfig":"23"},{"size":413,"mtime":1611755263252,"results":"31","hashOfConfig":"23"},{"size":326,"mtime":1611994840764,"results":"32","hashOfConfig":"23"},{"size":1857,"mtime":1611990034738,"results":"33","hashOfConfig":"23"},{"size":1281,"mtime":1611990100415,"results":"34","hashOfConfig":"23"},{"size":1270,"mtime":1612010702414,"results":"35","hashOfConfig":"23"},{"size":1517,"mtime":1611764737102,"results":"36","hashOfConfig":"23"},{"size":4281,"mtime":1612009408204,"results":"37","hashOfConfig":"23"},{"size":989,"mtime":1611993804937,"results":"38","hashOfConfig":"23"},{"size":418,"mtime":1612011911156,"results":"39","hashOfConfig":"23"},{"size":198,"mtime":1612011846203,"results":"40","hashOfConfig":"23"},{"size":716,"mtime":1612009315348,"results":"41","hashOfConfig":"23"},{"size":999,"mtime":1612007218997,"results":"42","hashOfConfig":"23"},{"size":1193,"mtime":1612008920235,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1jbabir",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\countries\\src\\index.js",[],["94","95"],"D:\\countries\\src\\App.js",["96"],"import React, { lazy, Suspense, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport CustomSpinner from \"./components/common/CustomSpinner\";\r\n\r\nimport NavBar from \"./components/common/NavBar\";\r\nimport { getAllData__api, getAllData__fun } from \"./Redux/Actions/DataActions\";\r\nconst Home = lazy(() => import(\"./components/pages/Home\"));\r\nconst MapPage = lazy(() => import(\"./components/pages/Map\"));\r\nconst SpecificCountry = lazy(() =>\r\n  import(\"./components/pages/specificCountry\")\r\n);\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector(({ DataReducer: { data } }) => data);\r\n  const lightTheme = useSelector(\r\n    ({ ThemeReducer: { lightTheme } }) => lightTheme\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getLocalData = localStorage.getItem(\"countriesInfo\");\r\n\r\n    if (getLocalData && JSON.parse(getLocalData).length) {\r\n      dispatch(getAllData__fun(JSON.parse(getLocalData)));\r\n    } else {\r\n      dispatch(getAllData__api());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"countriesInfo\", JSON.stringify(countries));\r\n  }, [countries]);\r\n\r\n  return (\r\n    <div className={!lightTheme ? \"app\" : \"app darkmode\"}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Suspense fallback={<CustomSpinner />}>\r\n            <Route exact component={Home} path=\"/\" />\r\n            <Route exact component={MapPage} path=\"/map\" />\r\n            <Route exact component={MapPage} path=\"/map/:latlng\" />\r\n            <Route\r\n              exact\r\n              component={SpecificCountry}\r\n              path=\"/specificCountry/:id\"\r\n            />\r\n          </Suspense>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\countries\\src\\components\\common\\NavBar.jsx",["97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeTheme, setTheme } from \"../../Redux/Actions/ThemeAction\";\r\n\r\nconst NavBar = () => {\r\n  const history = useHistory();\r\n  const [isToggle, setIsToggle] = useState(false);\r\n  const localName = \"toggleTheme\";\r\n\r\n  const lightTheme = useSelector(\r\n    ({ ThemeReducer: { lightTheme } }) => lightTheme\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let localTheme = localStorage.getItem(localName);\r\n    if (localTheme) {\r\n      dispatch(setTheme(JSON.parse(localTheme)));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsToggle(lightTheme);\r\n    localStorage.setItem(localName, isToggle);\r\n  }, [isToggle]);\r\n\r\n  const handleToggle = () => {\r\n    setIsToggle(prev => !prev);\r\n    dispatch(changeTheme());\r\n  };\r\n\r\n  return (\r\n    <div className=\"MainNav\">\r\n      <Navbar className=\"nav\">\r\n        <Navbar.Brand onClick={() => history.push(\"/\")}>countries</Navbar.Brand>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto\">\r\n            <NavLink exact to=\"/\" activeClassName=\"true\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\"></i>\r\n              <span className=\"nav__text ml-2 d-none d-sm-inline\">Home</span>\r\n            </NavLink>\r\n\r\n            <NavLink\r\n              exact\r\n              to=\"/map\"\r\n              activeClassName=\"true\"\r\n              className=\"nav-link\">\r\n              <i className=\"fas fa-map-marked-alt\"></i>\r\n              <span className=\"nav__text ml-2 d-none d-sm-inline\">Map</span>\r\n            </NavLink>\r\n\r\n            <span className=\"nav-link toggleMode\" onClick={handleToggle}>\r\n              <i className={`fa${isToggle ? \"r\" : \"s\"} fa-sun`}></i>\r\n              <span className=\"ml-2\">\r\n                {isToggle ? \"dark mode\" : \"light mode\"}\r\n              </span>\r\n            </span>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\countries\\src\\components\\pages\\Home\\index.jsx",[],"D:\\countries\\src\\components\\pages\\Map\\index.jsx",["99","100"],"import React from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\n\r\nconst MapPage = () => {\r\n  const { latlng } = useParams();\r\n\r\n  const position =\r\n    latlng != \"\" && latlng\r\n      ? [Number(latlng.split(\",\")[0]), Number(latlng.split(\",\")[1])]\r\n      : [-6, 71.5];\r\n  const zoomLevel = latlng != \"\" && latlng ? 6 : 2;\r\n\r\n  const countries = useSelector(({ DataReducer: { data } }) => data);\r\n\r\n  console.log(latlng);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      {countries.length && (\r\n        <MapContainer center={position} zoom={zoomLevel} scrollWheelZoom={true}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n\r\n          {countries\r\n            .filter(item => item.latlng.length && item.latlng)\r\n            .map((item, i) => (\r\n              <Marker key={i} position={item.latlng}>\r\n                <Popup>\r\n                  <h4>\r\n                    {item.name}({item.alpha3Code})\r\n                  </h4>\r\n                  <NavLink\r\n                    style={{ fontSize: \"1.1rem\" }}\r\n                    to={`/specificCountry/${item.alpha3Code}`}>\r\n                    More Info\r\n                  </NavLink>\r\n                </Popup>\r\n              </Marker>\r\n            ))}\r\n        </MapContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n","D:\\countries\\src\\components\\pages\\Home\\Header\\Header.jsx",[],"D:\\countries\\src\\components\\pages\\Home\\Header\\DropDown.jsx",[],"D:\\countries\\src\\components\\pages\\Home\\Header\\SearchBar.jsx",["101"],"import React, { useEffect, useState } from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useDebounce } from \"@react-hook/debounce\";\r\nimport {\r\n  fillFilterData__fun,\r\n  filterData__fun,\r\n} from \"../../../../Redux/Actions/DataActions\";\r\n\r\nconst SearchBar = () => {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useDebounce(\"initialValue\", 400);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = e => {\r\n    setInputVal(e.target.value);\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputVal === \"\") {\r\n      dispatch(fillFilterData__fun());\r\n    } else {\r\n      dispatch(filterData__fun(\"input\", searchQuery));\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text id=\"basic-addon1\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n\r\n        <FormControl\r\n          placeholder=\"search for a country...\"\r\n          aria-label=\"Username\"\r\n          aria-describedby=\"basic-addon1\"\r\n          type=\"text\"\r\n          value={inputVal}\r\n          onChange={handleInput}\r\n        />\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","D:\\countries\\src\\components\\common\\CustomSpinner.jsx",[],"D:\\countries\\src\\Redux\\Reducer\\index.js",[],"D:\\countries\\src\\Redux\\Reducer\\DataReducer.js",["102"],"import {\r\n  GET_ALL_DATA,\r\n  FILTER_DATA,\r\n  FILL_FILTER_DATA,\r\n  DATA_ERROR,\r\n  ISLOADING,\r\n  GET_SINGLE_DATA,\r\n  SET_SINGLE_DATA,\r\n} from \"../Actions/DataActions\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  filterData: [],\r\n  singleData: {},\r\n  loading: false,\r\n  error: [],\r\n};\r\n\r\nexport const DataReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_ALL_DATA:\r\n      return {\r\n        ...state,\r\n        data: [...payload],\r\n        loading: false,\r\n        error: [],\r\n      };\r\n\r\n    case FILTER_DATA:\r\n      let sortedResult = [];\r\n\r\n      if (payload.type === \"input\") {\r\n        sortedResult.push(\r\n          ...state.data.filter(item =>\r\n            item.name.toLowerCase().includes(payload.data.toLowerCase())\r\n          )\r\n        );\r\n      } else if (payload.type === \"select\") {\r\n        sortedResult = [\r\n          ...state.data.filter(\r\n            item => item.region.toLowerCase() === payload.data.toLowerCase()\r\n          ),\r\n        ];\r\n      } else if (payload.type === \"initial\") {\r\n        sortedResult = [...state.data];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filterData: [...sortedResult],\r\n      };\r\n\r\n    case FILL_FILTER_DATA:\r\n      return {\r\n        ...state,\r\n        filterData: [...state.data],\r\n      };\r\n\r\n    case GET_SINGLE_DATA:\r\n      return {\r\n        ...state,\r\n        singleData: {\r\n          ...state.data.find(item => item.alpha3Code == payload),\r\n        },\r\n      };\r\n\r\n    case SET_SINGLE_DATA:\r\n      return {\r\n        ...state,\r\n        singleData: { ...payload },\r\n      };\r\n\r\n    case ISLOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: [],\r\n      };\r\n\r\n    case DATA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: [payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\countries\\src\\Redux\\Actions\\DataActions.js",[],"D:\\countries\\src\\components\\pages\\Home\\DisplayCountries\\index.jsx",["103"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CustomCard from \"../../../common/CustomCard\";\r\nimport { filterData__fun } from \"../../../../Redux/Actions/DataActions\";\r\n\r\nconst DisplayCountries = () => {\r\n  const filterCountries = useSelector(\r\n    ({ DataReducer: { filterData } }) => filterData\r\n  );\r\n  const originalCountries = useSelector(({ DataReducer: { data } }) => data);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(filterData__fun(\"initial\"));\r\n  }, [originalCountries]);\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <Row className=\"align-items-center \">\r\n        {filterCountries.length\r\n          ? filterCountries.map(\r\n              ({ alpha3Code, name, region, population, flag, capital }) => (\r\n                <CustomCard\r\n                  key={alpha3Code}\r\n                  alpha3Code={alpha3Code}\r\n                  name={name}\r\n                  region={region}\r\n                  population={population}\r\n                  img={flag}\r\n                  capital={capital}\r\n                />\r\n              )\r\n            )\r\n          : \"\"}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayCountries;\r\n","D:\\countries\\src\\components\\common\\CustomCard.jsx",[],"D:\\countries\\src\\components\\pages\\specificCountry\\index.jsx",["104","105","106"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {\r\n  getSingleData__fun,\r\n  setSingleData__fun,\r\n} from \"../../../Redux/Actions/DataActions\";\r\nimport Info from \"./Info\";\r\nimport UniversityInfo from \"./UniversityInfo\";\r\nimport {\r\n  getUniversities__Api,\r\n  getUniversities__fun,\r\n} from \"../../../Redux/Actions/UnivertiesAction\";\r\nimport CustomSpinner from \"../../common/CustomSpinner\";\r\n\r\nconst SpecificCountry = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const country = useSelector(({ DataReducer: { singleData } }) => singleData);\r\n  const universities = useSelector(({ UniversityReducer: { data } }) => data);\r\n  const universities__loading = useSelector(\r\n    ({ UniversityReducer: { loading } }) => loading\r\n  );\r\n\r\n  //related to fetching single country starts\r\n  useEffect(() => {\r\n    const getSessionData = sessionStorage.getItem(\"singleCountry\");\r\n\r\n    if (getSessionData && JSON.parse(getSessionData).name) {\r\n      dispatch(setSingleData__fun(JSON.parse(getSessionData)));\r\n    } else {\r\n      dispatch(getSingleData__fun(id));\r\n    }\r\n\r\n    return () => {\r\n      sessionStorage.removeItem(\"singleCountry\");\r\n      dispatch(setSingleData__fun({}));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"singleCountry\", JSON.stringify(country));\r\n  }, [universities]);\r\n  //related to fetching single country ends\r\n\r\n  //related to fetching universities starts\r\n  useEffect(() => {\r\n    const getSessionData = sessionStorage.getItem(\"university\");\r\n    console.log(\"country name is\", country.name);\r\n    if (getSessionData && JSON.parse(getSessionData).name) {\r\n      dispatch(getUniversities__fun(JSON.parse(getSessionData)));\r\n    } else {\r\n      country.name && dispatch(getUniversities__Api(country.name));\r\n    }\r\n\r\n    return () => {\r\n      dispatch(getUniversities__fun([]));\r\n      sessionStorage.removeItem(\"university\");\r\n    };\r\n  }, [country.name]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"university\", JSON.stringify(universities));\r\n  }, [universities]);\r\n  //related to fetching universitites ends\r\n\r\n  const check = item => (country[item] ? country[item] : \"unknown\");\r\n\r\n  const handleMapBtn = () => {\r\n    history.push(`/map/${[country.latlng]}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"specificPage\">\r\n      <Row className=\"align-items-center justify-content-center \">\r\n        <Col md={8} lg={6}>\r\n          <img src={check(\"flag\")} className=\"img-fluid mb-3\" alt=\"\" />\r\n        </Col>\r\n\r\n        <Col md={8} lg={6}>\r\n          <h4 className=\"specificPage__title mb-4\">{check(\"name\")}</h4>\r\n\r\n          <Row className=\"justify-content-around\">\r\n            <Col lg={6}>\r\n              <Info title=\"native name\" info={check(\"nativeName\")} />\r\n              <Info title=\"Population\" info={check(\"population\")} />\r\n              <Info title=\"region\" info={check(\"region\")} />\r\n              <Info title=\"region\" info={check(\"subregion\")} />\r\n              <Info title=\"capital\" info={check(\"capital\")} />\r\n            </Col>\r\n\r\n            <Col lg={6}>\r\n              <Info title=\"alpha Code\" info={check(\"alpha3Code\")} />\r\n              <Info title=\"languages\" info={check(\"languages\")} />\r\n              <Info title=\"currencies\" info={check(\"currencies\")} />\r\n              <Button\r\n                variant=\"info\"\r\n                className=\"font-weight-bold\"\r\n                onClick={handleMapBtn}>\r\n                <i className=\"fas fa-map-marked-alt\"></i>\r\n                <span className=\"ml-3\"> View on map</span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"mt-3\">\r\n            <Info title=\"border countries\" info={check(\"borders\")} />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div className=\"university mt-5\">\r\n        <h1 className=\"university__title mb-3\">Universities:-</h1>\r\n\r\n        {universities__loading && <CustomSpinner />}\r\n\r\n        <UniversityInfo />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificCountry;\r\n","D:\\countries\\src\\components\\pages\\specificCountry\\Info.jsx",[],"D:\\countries\\src\\Redux\\Reducer\\ThemeReducer.js",[],"D:\\countries\\src\\Redux\\Actions\\ThemeAction.js",[],"D:\\countries\\src\\Redux\\Reducer\\UniversityReducer.js",[],"D:\\countries\\src\\Redux\\Actions\\UnivertiesAction.js",[],"D:\\countries\\src\\components\\pages\\specificCountry\\UniversityInfo.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":29,"column":6,"nodeType":"113","endLine":29,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":23,"column":6,"nodeType":"113","endLine":23,"endColumn":8,"suggestions":"115"},{"ruleId":"111","severity":1,"message":"116","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":16,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":10,"column":12,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":13,"column":28,"nodeType":"120","messageId":"121","endLine":13,"endColumn":30},{"ruleId":"111","severity":1,"message":"122","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":19,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":63,"column":54,"nodeType":"120","messageId":"121","endLine":63,"endColumn":56},{"ruleId":"111","severity":1,"message":"112","line":17,"column":6,"nodeType":"113","endLine":17,"endColumn":25,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":44,"column":6,"nodeType":"113","endLine":44,"endColumn":8,"suggestions":"127"},{"ruleId":"111","severity":1,"message":"128","line":48,"column":6,"nodeType":"113","endLine":48,"endColumn":20,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"112","line":65,"column":6,"nodeType":"113","endLine":65,"endColumn":20,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["133"],["134"],"React Hook useEffect has a missing dependency: 'lightTheme'. Either include it or remove the dependency array.",["135"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'inputVal'. Either include them or remove the dependency array.",["136"],"Expected '===' and instead saw '=='.",["137"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array.",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [dispatch]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [isToggle, lightTheme]",{"range":"159","text":"160"},"Update the dependencies array to be: [dispatch, inputVal, searchQuery]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, originalCountries]",{"range":"163","text":"164"},"Update the dependencies array to be: [dispatch, id]",{"range":"165","text":"166"},"Update the dependencies array to be: [country, universities]",{"range":"167","text":"168"},"Update the dependencies array to be: [country.name, dispatch]",{"range":"169","text":"170"},[1097,1099],"[dispatch]",[770,772],[882,892],"[isToggle, lightTheme]",[835,848],"[dispatch, inputVal, searchQuery]",[590,609],"[dispatch, originalCountries]",[1490,1492],"[dispatch, id]",[1595,1609],"[country, universities]",[2188,2202],"[country.name, dispatch]"]