{"version":3,"sources":["components/pages/Map/index.jsx"],"names":["MapPage","latlng","useParams","position","Number","split","zoomLevel","countries","useSelector","DataReducer","data","console","log","className","length","center","zoom","scrollWheelZoom","url","attribution","filter","item","map","i","name","alpha3Code","style","fontSize","to"],"mappings":"4LAiDeA,UA5CC,WAAO,IACbC,EAAWC,cAAXD,OAEFE,EACM,IAAVF,GAAgBA,EACZ,CAACG,OAAOH,EAAOI,MAAM,KAAK,IAAKD,OAAOH,EAAOI,MAAM,KAAK,KACxD,EAAE,EAAG,MACLC,EAAsB,IAAVL,GAAgBA,EAAS,EAAI,EAEzCM,EAAYC,aAAY,qBAAGC,YAAeC,QAIhD,OAFAC,QAAQC,IAAIX,GAGV,qBAAKY,UAAU,MAAf,SACGN,EAAUO,QACT,eAAC,IAAD,CAAcC,OAAQZ,EAAUa,KAAMV,EAAWW,iBAAiB,EAAlE,UACE,cAAC,IAAD,CACEC,IAAI,wDACJC,YAAY,2EAGbZ,EACEa,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,OAAOa,QAAUO,EAAKpB,UAC1CqB,KAAI,SAACD,EAAME,GAAP,OACH,cAAC,IAAD,CAAgBpB,SAAUkB,EAAKpB,OAA/B,SACE,eAAC,IAAD,WACE,+BACGoB,EAAKG,KADR,IACeH,EAAKI,WADpB,OAGA,cAAC,IAAD,CACEC,MAAO,CAAEC,SAAU,UACnBC,GAAE,2BAAsBP,EAAKI,YAF/B,2BALSF","file":"static/js/7.75b23463.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\n\r\nconst MapPage = () => {\r\n  const { latlng } = useParams();\r\n\r\n  const position =\r\n    latlng != \"\" && latlng\r\n      ? [Number(latlng.split(\",\")[0]), Number(latlng.split(\",\")[1])]\r\n      : [-6, 71.5];\r\n  const zoomLevel = latlng != \"\" && latlng ? 6 : 2;\r\n\r\n  const countries = useSelector(({ DataReducer: { data } }) => data);\r\n\r\n  console.log(latlng);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      {countries.length && (\r\n        <MapContainer center={position} zoom={zoomLevel} scrollWheelZoom={true}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n\r\n          {countries\r\n            .filter(item => item.latlng.length && item.latlng)\r\n            .map((item, i) => (\r\n              <Marker key={i} position={item.latlng}>\r\n                <Popup>\r\n                  <h4>\r\n                    {item.name}({item.alpha3Code})\r\n                  </h4>\r\n                  <NavLink\r\n                    style={{ fontSize: \"1.1rem\" }}\r\n                    to={`/specificCountry/${item.alpha3Code}`}>\r\n                    More Info\r\n                  </NavLink>\r\n                </Popup>\r\n              </Marker>\r\n            ))}\r\n        </MapContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"sourceRoot":""}